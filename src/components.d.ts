/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AuiIcon {
        /**
          * Type of the icon from iconfont
         */
        "nzIconfont": string;
        /**
          * Rotate degrees
         */
        "nzRotate": string;
        /**
          * Rotate icon with animation
         */
        "nzSpin": boolean;
        /**
          * Type of the ant design icon
         */
        "nzTheme": string;
        /**
          * Only support the two-tone icon. Specific the primary color.
         */
        "nzTwotoneColor": string;
        /**
          * Type of the ant design icon
         */
        "nzType": string;
    }
    interface AuiMessage {
        "content": string;
        /**
          * Whether to turn on animation
         */
        "nzAnimate": boolean;
        /**
          * Direction of the text in the messages
         */
        "nzDirection": 'ltr' | 'rtl';
        /**
          * Duration (milliseconds), does not disappear when set to 0
         */
        "nzDuration": number;
        /**
          * The maximum number of messages that can be displayed at the same time
         */
        "nzMaxStack": number;
        /**
          * Do not remove automatically when mouse is over while setting to `true`
         */
        "nzPauseOnHover": boolean;
        /**
          * Distance from `top`
         */
        "nzTop": string | number;
        "nzType": 'success' | 'info' | 'warning' | 'error' | 'loading';
    }
}
declare global {
    interface HTMLAuiIconElement extends Components.AuiIcon, HTMLStencilElement {
    }
    var HTMLAuiIconElement: {
        prototype: HTMLAuiIconElement;
        new (): HTMLAuiIconElement;
    };
    interface HTMLAuiMessageElement extends Components.AuiMessage, HTMLStencilElement {
    }
    var HTMLAuiMessageElement: {
        prototype: HTMLAuiMessageElement;
        new (): HTMLAuiMessageElement;
    };
    interface HTMLElementTagNameMap {
        "aui-icon": HTMLAuiIconElement;
        "aui-message": HTMLAuiMessageElement;
    }
}
declare namespace LocalJSX {
    interface AuiIcon {
        /**
          * Type of the icon from iconfont
         */
        "nzIconfont"?: string;
        /**
          * Rotate degrees
         */
        "nzRotate"?: string;
        /**
          * Rotate icon with animation
         */
        "nzSpin"?: boolean;
        /**
          * Type of the ant design icon
         */
        "nzTheme"?: string;
        /**
          * Only support the two-tone icon. Specific the primary color.
         */
        "nzTwotoneColor"?: string;
        /**
          * Type of the ant design icon
         */
        "nzType"?: string;
    }
    interface AuiMessage {
        "content"?: string;
        /**
          * Whether to turn on animation
         */
        "nzAnimate"?: boolean;
        /**
          * Direction of the text in the messages
         */
        "nzDirection"?: 'ltr' | 'rtl';
        /**
          * Duration (milliseconds), does not disappear when set to 0
         */
        "nzDuration"?: number;
        /**
          * The maximum number of messages that can be displayed at the same time
         */
        "nzMaxStack"?: number;
        /**
          * Do not remove automatically when mouse is over while setting to `true`
         */
        "nzPauseOnHover"?: boolean;
        /**
          * Distance from `top`
         */
        "nzTop"?: string | number;
        "nzType"?: 'success' | 'info' | 'warning' | 'error' | 'loading';
    }
    interface IntrinsicElements {
        "aui-icon": AuiIcon;
        "aui-message": AuiMessage;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "aui-icon": LocalJSX.AuiIcon & JSXBase.HTMLAttributes<HTMLAuiIconElement>;
            "aui-message": LocalJSX.AuiMessage & JSXBase.HTMLAttributes<HTMLAuiMessageElement>;
        }
    }
}
